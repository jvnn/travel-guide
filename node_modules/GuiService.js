var fs = require('fs');

function GuiService() {

  var callbacks = {}

  function getSmallSummary(item, killMarker, saveChanges) {
    var html = '<div class="small-summary">';

    if (item['name']) {
      html += "<b>" + item['name'] + "</b>";
    }
    if (item['description']) {
      html += "<br>";
      html += '<textarea id="description-small-summary" rows="4" class="description-input">'
      html += item['description'] + '</textarea>';
    }

    html += '<div class="input-controls clearfix">';

    var idDelete = getId();
    storeCallback(idDelete, function(document, param) {
      document.getElementById("input-delete-small-summary").classList.add("confirming");
      document.getElementById("input-confirmation-small-summary").classList.add("confirming");
      document.getElementById("input-save-small-summary").classList.add("confirming");
    }, null, true);

    html += '<div id="input-delete-small-summary" class="button input-delete" ' + getCallString(idDelete) + '>'
    html += '<img src="../img/delete.svg" /></div>';

    var idConfirmDelete = getId();
    storeCallback(idConfirmDelete, function(document, param) {
      killMarker();
    }, null, true);
    html += '<div id="input-confirmation-small-summary" class="button input-confirmation" ' + getCallString(idConfirmDelete) + '>'
    html += 'Sure..?</div>';

    var idSave = getId();
    storeCallback(idSave, function(document, param) {
      var newDescription = document.getElementById("description-small-summary").value;
      saveChanges(newDescription);
    }, null, true);
    html += '<div id="input-save-small-summary" class="button input-accept" ' + getCallString(idSave) + '>'
    html += '<img src="../img/accept.svg" /></div></div>';
    return html;
  }

  function getCreateNewPopup(lat, lon, createdCallback) {
    var uniqueId = "newItemPopup" + lat + "-" + lon;

    var ids = ['name' + uniqueId, 'description' + uniqueId, 'tags' + uniqueId];
    var texts = ['Location: ' + lat.toFixed(4) +', ' + lon.toFixed(4)];

    var cbId = getId();
    storeCallback(cbId, function(document, params) {
      var name = document.getElementById(ids[0]).value;
      var description = document.getElementById(ids[1]).value;
      var tags = document.getElementById(ids[2]).value;
      createdCallback(name, description, tags);
    });

    var html = create('html/components/create-new-dialog.html', ids, texts, [cbId]);
    return html;
  }

  function call(document, id) {
    var callback = callbacks[id];
    if (callback) {
      callback.f(document, callback.p);
      if (callback.once) {
        delete callbacks[id];
      }
    }
  }

  this.getSmallSummary = getSmallSummary;
  this.getCreateNewPopup = getCreateNewPopup;
  this.call = call;

  function create(filename, ids, texts, callbackIds) {
    var html = fs.readFileSync(filename, 'utf-8');

    for (var idx in ids) {
      var id = ids[idx];
      html = html.replace('@!id', id);
    }

    for (var idx in texts) {
      var text = texts[idx];
      html = html.replace('@!text', text);
    }

    for (var idx in callbackIds) {
      var cbId = callbackIds[idx];
      html = html.replace('@!callback', 'guiService.call(document, ' + cbId + ')');
    }

    return html;
  }

  function storeCallback(id, callback, params, oneshot) {
    callbacks[id] = {f: callback, p: params, once: oneshot};
  }

  function getId() {
    return Math.random() + "";
  }

  function getCallString(id) {
    return 'onClick="guiService.call(document, \'' + id + '\');"';
  }
}

module.exports = new GuiService;
